
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUM    1
#define SYM    2
#define FUN    3

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ {
        chosen {
              zmk,battery = &vbatt;
        };

        vbatt: vbatt {
                compatible = "zmk,battery-nrf-vddh";
                label = "VBATT";
        };
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <220>;
                        quick_tap_ms = <0>;
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional_layers";
                tri_layer {
                        if-layers = <NUM SYM>;
                        then-layer = <FUN>;
                };
        };

        keymap {
                compatible = "zmk,keymap";


                default_layer {
                        bindings = <

   &mt Q             &kp W             &kp E             &kp R             &kp T                  &kp Y             &kp U             &kp I             &kp O             &mt P
   &hm LALT A        &hm LGUI S        &hm LCTRL D       &hm LSHIFT F      &kp G                  &kp H             &hm RSHIFT J      &hm LCTRL K       &hm LGUI L        &hm LALT SEMI
   &kp Z             &kp X             &kp C             &kp V             &kp B                  &kp N             &kp M             &kp COMMA         &kp DOT           &kp FSLH
                                       &kp ESC           &lt NUM RET       &kp SPACE              &kp TAB           &lt SYM BSPC      &lt DEL
                        >;
                };
 
                num_nav_layer {
                        bindings = <

   &kp ESC           &none             &kp UP            &kp PG_UP         &none                  &kp KP_ASTERISK   &kp KP_N7         &kp KP_N8         &kp KP_N9         &kp KP_MINUS
   &kp HOME          &kp LEFT          &kp DOWN          &kp RIGHT         &kp END                &kp KP_SLASH      &kp KP_N4         &kp KP_N5         &kp KP_N6         &kp KP_PLUS
   &kp ESC           &none             &none             &kp PG_DN         &none                  &kp KP_EQUAL      &kp KP_N1         &kp KP_N2         &kp KP_N3         &kp KP_N0
                     &trans            &trans            &trans            &kp                    &trans            &trans            &trans            &trans
                        >;
                };

                symbol_layer {
                        bindings = <
   &kp EXCL          &kp AT            &kp HASH          &kp DLLR          &kp PRCNT              &kp CARET         &kp AMPS          &kp STAR          &kp MINUS         &kp EQUAL
   &kp UNDER         &kp LBKT          &kp LBRC          &kp LPAR          &kp LT                 &kp GT            &kp RPAR          &kp RBRC          &kp RBKT          &kp PLUS
   &GRAVE            &none             &none             &none             &none                  &none             &none             &none             &none             &kp BSLH
                                       &trans            &trans            &trans                 &trans            &trans            &trans
                        >;
                };

                function_layer {
                        bindings = <
   &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4           &kp C_PLAY_PAUSE  &kp F7            &kp F8            &kp F9            &kp F10
   &none             &none             &none             &none             &bt BT_CLR             &kp C_VOL_UP      &kp F4            &kp F5            &kp F6            &kp F11
   &none             &none             &none             &none             &none                  &kp C_VOL_DOWN    &kp F1            &kp F2            &kp F3            &kp F12
                                       &trans            &trans            &trans                 &trans            &trans            &trans
                        >;
                };
        };
};